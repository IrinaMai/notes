{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","redux/operations.js","components/notesList/NotesList.js","redux/selectors.js","components/notesForm/NotesForm.js","App.js","index.js"],"names":["addNotesSuccess","createAction","getNotesSuccess","deleteNotesSucceess","chngNoteSuccess","filterHndl","filterClear","setError","notesReducer","createReducer","notesList","filter","error","state","action","payload","item","id","map","isDone","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","middleware","BASE_URL","Search","Input","NoteList","dispatch","useDispatch","useSelector","getAllNotes","corrList","filteredList","getIsLoading","useEffect","axios","get","then","response","Object","keys","data","catch","length","hndlDelete","e","currentTarget","dataset","delete","hndlChng","patch","chngNoteinBD","hndlOnChng","target","value","placeholder","allowClear","onChange","onSearch","onPressEnter","enterButton","className","itemLayout","dataSource","renderItem","Item","Meta","title","description","text","checked","checkedChildren","unCheckedChildren","data-id","type","danger","onClick","isLoading","getError","createSelector","fil","toLowerCase","includes","NotesForm","onFinish","note","post","name","label","rules","required","placeholer","htmlType","Title","Typography","App","errorMsg","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09c958a6.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNotesSuccess = createAction('@notes/AddSuccess');\r\nconst getNotesSuccess = createAction('@notes/GetSucces');\r\nconst deleteNotesSucceess = createAction('@notes/DeletSuccess')\r\nconst chngNoteSuccess = createAction('@notes/ChangeSuccess')\r\nconst filterHndl = createAction('@filter/AddFilter');\r\nconst filterClear = createAction('@filter/ClearFilter');\r\nconst setError = createAction('@notes/Error')\r\n\r\n\r\nexport {addNotesSuccess, getNotesSuccess, filterHndl, filterClear, deleteNotesSucceess, chngNoteSuccess, setError};","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {addNotesSuccess, getNotesSuccess, filterHndl, filterClear, deleteNotesSucceess, chngNoteSuccess, setError} from \"./actions\";\r\n\r\nconst initialState = {\r\n    notesList: [],\r\n    filter: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const notesReducer = createReducer(\r\n    { ...initialState },\r\n    {\r\n        [addNotesSuccess]: (state, action) => ({\r\n            ...state, notesList: [...state.notesList, action.payload], error: \"\"\r\n        }),\r\n        [getNotesSuccess]: (state, action) => ({\r\n            ...state, notesList: [...action.payload], error: \"\"\r\n        }),\r\n        [filterHndl]: (state, action) => ({...state, filter: action.payload}),\r\n        [filterClear]: (state, action) => ({ ...state, filter: '' }),\r\n        [deleteNotesSucceess]: (state, action) => ({\r\n            ...state, notesList: [...state.notesList.filter(item => item.id !== action.payload)], error: \"\"\r\n        }),\r\n        [chngNoteSuccess]: (state, action) => ({\r\n            ...state, notesList: [...state.notesList.map(item => item.id !== action.payload ? item : ({...item, isDone: !item.isDone }))], error: \"\"\r\n        }),\r\n        [setError]: (state, action) => ({\r\n            ...state, error: action.payload\r\n        })\r\n    }\r\n)","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { notesReducer } from './reducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: notesReducer,\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;","import {addNotesSuccess, getNotesSuccess, deleteNotesSucceess, chngNoteSuccess, setError, loading} from \"./actions\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://todo-list-97e36-default-rtdb.europe-west1.firebasedatabase.app/\";\r\n\r\n\r\nconst addNotesToDB = note => dispatch => {\r\n    axios\r\n        .post(`${BASE_URL}Notes.json`, note)\r\n        .then(response => {\r\n            dispatch(addNotesSuccess({ ...note, id: response.data.name }));\r\n        })\r\n        .catch(error => dispatch(setError('ooops samthing going wrong')))\r\n};\r\n\r\nconst getNotesFromDB = () => dispatch => {\r\n    axios\r\n        .get(`${BASE_URL}Notes.json`)\r\n        .then(response => {\r\n            dispatch(getNotesSuccess(\r\n            Object.keys(response.data).map(item => ({\r\n            ...response.data[item],\r\n            id: item,\r\n            })),\r\n            )) \r\n        \r\n        })\r\n        .catch(error => dispatch(setError('No one contact')))\r\n};\r\n\r\nconst deletNoteFromDB = id => dispatch => {\r\n    axios\r\n        .delete(`${BASE_URL}Notes/${id}.json`)\r\n        .then(() => {\r\n            dispatch(deleteNotesSucceess(id));\r\n        })\r\n        .catch(error => dispatch(setError('ooops samthing going wrong')))\r\n}\r\n\r\nconst chngNoteinBD = (id, isDone )=> dispatch => {\r\n    axios\r\n        .patch(`${BASE_URL}Notes/${id}.json`, {isDone})\r\n        .then(() => {\r\n           dispatch(chngNoteSuccess(id))\r\n        })\r\n        .catch(error => dispatch(setError('ooops samthing going wrong')))\r\n}\r\n\r\nexport { addNotesToDB, getNotesFromDB, deletNoteFromDB, chngNoteinBD }","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { getAllNotes, filteredList, getIsLoading } from '../../redux/selectors'\r\nimport { getNotesFromDB, deletNoteFromDB, chngNoteinBD } from '../../redux/operations'\r\nimport { filterClear, filterHndl } from '../../redux/actions';\r\nimport { Input, Button,  List, Switch } from 'antd';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nconst NoteList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const notesList = useSelector(getAllNotes);\r\n    const corrList = useSelector(filteredList);\r\n    const isLoading = useSelector(getIsLoading);\r\n\r\n \r\n    useEffect(() => {\r\n        dispatch(getNotesFromDB())\r\n    }, [notesList.length]);\r\n    \r\n    useEffect(() => {\r\n        dispatch(filterClear())\r\n    }, [corrList < 1])\r\n \r\n    const hndlDelete = (e) => {\r\n        dispatch(deletNoteFromDB(e.currentTarget.dataset.id))\r\n    };\r\n\r\n    const hndlChng = (isDone, e) => {\r\n         dispatch(chngNoteinBD(e.currentTarget.dataset.id, isDone))\r\n       }\r\n    const hdlFilter = (e) => {\r\n         dispatch(filterHndl(e));\r\n    }\r\n\r\n    const hdlFilterEnter = (e) => {\r\n         dispatch(filterHndl(e.target.value));\r\n    }\r\n    const hndlOnChng = (e) => {\r\n        dispatch(filterHndl(e.target.value));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n              \r\n            {corrList.length > 0 && \r\n                <Search \r\n                placeholder=\"input search subject\" \r\n                allowClear onChange={hndlOnChng} \r\n                onSearch={hdlFilter} \r\n                onPressEnter={hndlOnChng} \r\n                enterButton className=\"searchInput\" />\r\n            }\r\n        <List\r\n    itemLayout=\"horizontal\"\r\n    dataSource={corrList}\r\n    renderItem={item => (\r\n      <List.Item>\r\n        <List.Item.Meta className={item.isDone && \"doneItem\"}\r\n          title={item.title}\r\n          description={item.text}\r\n        />\r\n      \r\n        <Switch checked={item.isDone? true : false}  checkedChildren=\"Done\" unCheckedChildren=\"Wait\" data-id={item.id} onChange={hndlChng} />\r\n        <Button type=\"primary\" danger data-id={item.id} onClick={hndlDelete} className=\"deleteBtn\">Delete</Button>\r\n      </List.Item>\r\n    )}\r\n  />,\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NoteList\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport NoteList from '../components/notesList/NotesList';\r\n\r\nconst getAllNotes = state => state.notesList;\r\nconst getFilter = state => state.filter;\r\nconst getIsLoading = state => state.isLoading;\r\nconst getError = state => state.error;\r\n\r\nconst filteredList = createSelector(\r\n  [getAllNotes, getFilter],\r\n  (notesList, fil) => {\r\n      return notesList.filter(item =>\r\n        item.title.toLowerCase().includes(fil.toLowerCase()),\r\n      );\r\n\r\n  },\r\n);\r\n\r\n\r\n\r\n\r\nexport {getAllNotes, getFilter, filteredList, getIsLoading, getError}","import React, {useState} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNotesToDB } from '../../redux/operations';\r\nimport { Form, Input, Button, Typography } from 'antd';\r\nimport {getError} from '../../redux/selectors'\r\n\r\n\r\n\r\nconst NotesForm =() => {\r\n    const dispatch = useDispatch();\r\n    const errorMsg = useSelector(getError)\r\n\r\n    const hndlSubmit =(e) => {\r\n        dispatch(addNotesToDB({...e, isDone:false}));\r\n     };\r\n\r\n    return (\r\n       \r\n            <Form  onFinish={hndlSubmit} name=\"add-notes\" className=\"form\">\r\n                <Form.Item\r\n                    \r\n                        name=\"title\"\r\n                        label=\"Subject\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                    >\r\n                    <Input name=\"title\"  placeholer=\"Titel of notes\" />\r\n                </Form.Item>\r\n                        <Form.Item\r\n                        name=\"text\"\r\n                        label=\"Note\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                    >\r\n                    <Input name=\"text\"  placeholer=\"Text of notes\" />\r\n                    </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\"  >Add Note</Button>\r\n             \r\n            </Form>\r\n\r\n    )\r\n};\r\n\r\nexport default NotesForm","import React from \"react\";\nimport {useSelector } from 'react-redux';\nimport {getError} from './redux/selectors'\n\nimport { Typography, Alert } from 'antd';\nimport 'antd/dist/antd.css';\nimport NotesForm from \"./components/notesForm/NotesForm\"\nimport NoteList from \"./components/notesList/NotesList\";\n\nconst { Title } = Typography;\n\nfunction App() {\n  const errorMsg = useSelector(getError)\n  return (\n    <>\n    {errorMsg && <Alert message={errorMsg} type=\"error\" />}\n    <Title> NOTEMAKER</Title>\n      <NotesForm />\n      <NoteList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport App from './App';\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}